[{"J:\\GD_my_stuff\\html_files\\projects\\pomodoro\\src\\index.js":"1","J:\\GD_my_stuff\\html_files\\projects\\pomodoro\\src\\App.js":"2","J:\\GD_my_stuff\\html_files\\projects\\pomodoro\\src\\reportWebVitals.js":"3","J:\\GD_my_stuff\\html_files\\projects\\pomodoro\\src\\components\\Pomodoro.js":"4","J:\\GD_my_stuff\\html_files\\projects\\pomodoro\\src\\components\\Timer.js":"5","J:\\GD_my_stuff\\html_files\\projects\\pomodoro\\src\\components\\TimerControls.js":"6","J:\\GD_my_stuff\\html_files\\projects\\pomodoro\\src\\components\\SetTimer.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":4880,"mtime":1610518957017,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":256,"mtime":1610517095302,"results":"12","hashOfConfig":"9"},{"size":657,"mtime":1610517589622,"results":"13","hashOfConfig":"9"},{"size":514,"mtime":1610518235234,"results":"14","hashOfConfig":"9"},{"size":1174,"mtime":1610518619052,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1dihyp9",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"J:\\GD_my_stuff\\html_files\\projects\\pomodoro\\src\\index.js",[],["33","34"],"J:\\GD_my_stuff\\html_files\\projects\\pomodoro\\src\\App.js",["35"],"import './App.css';\nimport React, { Component } from 'react'\nimport Pomodoro from './components/Pomodoro';\nimport SetTimer from './components/SetTimer';\nimport Timer from './components/Timer';\nimport TimerControls from './components/TimerControls';\n\nexport default class App extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      session:5,\n      break:1,\n      totalTime:0,\n      timeLeft:0,\n      displayTime:{\n        m:\"05\",\n        s:\"00\"\n      },\n      timerName:'Session',\n      status: 'off',\n      startTime:new Date(),\n      pauseTime:new Date()\n    }\n    this.play = this.play.bind(this);\n    this.pause = this.pause.bind(this);\n    this.reset = this.reset.bind(this);\n    this.click = this.click.bind(this);\n    // this.click = this.click.bind(this);\n  }\n  zeroPad(num,size){\n    num = num.toString();\n      while (num.length < size) num = \"0\" + num;\n      return num;\n  }\n  getTimeDiff(t){\n    var timeDiff={};\n    timeDiff.s = this.zeroPad(Math.floor(((t)%60000)/1000),2);\n    timeDiff.m = this.zeroPad(Math.floor((t)/60000),2);\n    return timeDiff;\n  }\n  play(){\n    console.log(this.state);\n    if(this.state.status === 'off'){\n      console.log('from play')\n      const t = this.state.session*1000*60;\n      this.setState({\n        startTime: new Date(),\n        status:'on',\n        totalTime: t,\n        displayTime: this.getTimeDiff(t)\n      })\n      this.updateInterval = setInterval(() => {\n        this.updateTimer();\n      }, 1000);    \n    }else if(this.state.status==='paused'){\n      this.setState({\n        status:'on',\n        startTime: new Date()\n      })\n      this.updateInterval = setInterval(() => {\n        this.updateTimer();\n      }, 1000);\n    }\n    // console.log(this.state);\n  }\n  pause(){\n    if(this.state.status ==='on'){\n      console.log('from pause')\n      this.setState(state=>({\n        status:'paused',\n        pauseTime: new Date(),\n        timeLeft : state.totalTime-(new Date() -  state.startTime),\n        totalTime: state.totalTime-(new Date() -  state.startTime)\n      }))\n      clearInterval(this.updateInterval);\n    }\n  }\n  reset(){\n    const t = this.state.session*1000*60;\n    this.setState({\n      timeLeft:0,\n      totalTime:0,\n      status: 'off',\n      timerName:'Session',\n      displayTime: this.getTimeDiff(t)\n    })\n    clearInterval(this.updateInterval);\n  }\n  updateTimer(){\n    console.log('from updateTimer')\n    if(this.state.totalTime - (new Date() - this.state.startTime) <= 0){\n      this.audioBeep.play();\n      switch(this.state.timerName){\n        case 'Session':\n          this.setState(state=>({\n            totalTime: state.break*1000*60,\n            startTime: new Date(),\n            timerName:'Break',\n            displayTime:this.getTimeDiff(state.session*1000*60)\n          }));\n          break;\n        case 'Break':\n          this.setState(state=>({\n            totalTime: state.session*1000*60,\n            startTime: new Date(),\n            timerName:'Session',\n            displayTime:this.getTimeDiff(state.session*1000*60)\n          }));\n          break;\n        default:\n          break;\n      }\n    }else{\n      const t = this.state.totalTime - (new Date() - this.state.startTime);\n      const td = this.getTimeDiff(t);\n      this.setState({\n        displayTime : td,\n        timeLeft: t\n      })\n    }\n  }\n\n  click(e){\n    // console.log(e.target.parentElement.id)\n    switch(e.target.parentElement.id){\n      case 'break-up':\n        this.setState(state=>({\n          break: state.break + 1\n        }));\n        break;\n      case 'break-down':\n        this.setState(state=>({\n          break: Math.max(state.break - 1,1)\n        }));\n        break;\n      case 'session-up':\n        this.setState(state=>({\n          session: state.session + 1,\n          displayTime:this.getTimeDiff((state.session+1)*1000*60)\n        }));\n        break;\n      case 'session-down':\n        this.setState(state=>({\n          session: Math.max(state.session - 1,1),\n          displayTime:this.getTimeDiff((state.session -1) *1000*60)\n        }));\n        break;\n      default:\n        break;\n      \n    }\n  }\n  render() {\n    return (\n      <div className =\"main-app container\">\n        {/* <Pomodoro time = {this.state} play ={this.play} pause = {this.pause} reset ={this.reset} click={this.click}/> */}\n        <Timer timerName = {this.state.timerName} displayTime = {this.state.displayTime}/>\n        <TimerControls play ={this.play} pause ={this.pause} reset={this.reset}/>\n        <SetTimer break = {this.state.break} session= {this.state.session} click ={this.click}/>\n        <audio\n          id=\"beep\"\n          preload=\"auto\"\n          ref={(audio) => {\n              this.audioBeep = audio;\n          }}\n          src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\n        />\n      </div>\n    )\n  }\n}","J:\\GD_my_stuff\\html_files\\projects\\pomodoro\\src\\reportWebVitals.js",[],"J:\\GD_my_stuff\\html_files\\projects\\pomodoro\\src\\components\\Pomodoro.js",["36"],"import React, { Component } from 'react'\r\n\r\nimport SetTimer from './SetTimer'\r\nexport default class Pomodoro extends Component {\r\n    render() {\r\n        return (\r\n            <div className =\"main\">\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n","J:\\GD_my_stuff\\html_files\\projects\\pomodoro\\src\\components\\Timer.js",[],"J:\\GD_my_stuff\\html_files\\projects\\pomodoro\\src\\components\\TimerControls.js",[],"J:\\GD_my_stuff\\html_files\\projects\\pomodoro\\src\\components\\SetTimer.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":3,"column":8,"nodeType":"43","messageId":"44","endLine":3,"endColumn":16},{"ruleId":"41","severity":1,"message":"45","line":3,"column":8,"nodeType":"43","messageId":"44","endLine":3,"endColumn":16},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'Pomodoro' is defined but never used.","Identifier","unusedVar","'SetTimer' is defined but never used.","no-global-assign","no-unsafe-negation"]